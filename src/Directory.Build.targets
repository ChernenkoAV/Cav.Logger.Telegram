<Project>

    <PropertyGroup>
        <PackageIcon>Cav.png</PackageIcon>
        <Authors>ChernenkoAV</Authors>
        <Owners>ChernenkoAV</Owners>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
        <OutputNuget></OutputNuget>

        <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    </PropertyGroup>

    <PropertyGroup Condition="'$(TargetFramework)' != 'net4.8' AND '$(TargetFrameworkVersion)' != 'v4.8'">
        <LangVersion>latest</LangVersion>
    </PropertyGroup>

    <PropertyGroup Condition="'$(TargetFramework)' == 'net4.8' OR '$(TargetFrameworkVersion)' == 'v4.8'">
        <ImplicitUsings>disable</ImplicitUsings>
        <Nullable>disable</Nullable>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)' == 'Release'">
        <RepositoryType>git</RepositoryType>

        <DebugType>portable</DebugType>
        <Optimize>true</Optimize>

        <IncludeSymbols>true</IncludeSymbols>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
        <DeterministicSourcePaths>true</DeterministicSourcePaths>

        <Deterministic>true</Deterministic>

        <DefineConstants>TRACE</DefineConstants>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
        <PackageVersion Condition="'$(PackageVersion)' != '' ">$(PackageVersion)-dev.$([System.DateTime]::Now.Tostring("yyyyMMddHHmm"))</PackageVersion>
        <!--<DebugType>portable</DebugType>-->
        <!--<DebugType>embedded</DebugType>-->
        <DebugType>full</DebugType>
        <Optimize>false</Optimize>
        <DebugSymbols>true</DebugSymbols>
        <CopyDebugSymbolFilesFromPackages>true</CopyDebugSymbolFilesFromPackages>

        <ContinuousIntegrationBuild>false</ContinuousIntegrationBuild>
        <DeterministicSourcePaths>false</DeterministicSourcePaths>
        <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>

        <EmbedUntrackedSources>false</EmbedUntrackedSources>
        <PublishRepositoryUrl>false</PublishRepositoryUrl>
        <EnableSourceControlManagerQueries>false</EnableSourceControlManagerQueries>
    </PropertyGroup>

    <ItemGroup Condition="'$(Configuration)' == 'Debug'">
        <SourceRoot Include="$(MSBuildThisFileDirectory)"/>
    </ItemGroup>

    <ItemGroup Condition="'$(Configuration)' == 'Release'">
        <PackageReference Include="Microsoft.SourceLink.GitHub" Version="*" PrivateAssets="All" />
    </ItemGroup>

    <PropertyGroup>
        <MonikerFile>$([System.IO.Path]::Combine('$(IntermediateOutputPath)','$(TargetFrameworkMoniker).AssemblyAttributes$(DefaultLanguageSourceExtension)'))</MonikerFile>
        <TargetFrameworkMonikerAssemblyAttributesPath>$(MonikerFile)</TargetFrameworkMonikerAssemblyAttributesPath>

        <VersionFile>$(IntermediateOutputPath)Version_$(AssemblyName)$(DefaultLanguageSourceExtension)</VersionFile>
    </PropertyGroup>

    <ItemGroup>
        <EmbeddedFiles Include="$(MonikerFile)"/>
    </ItemGroup>

    <!--Для выполнения таргетов один раз-->
    <PropertyGroup>
        <IsMultiTarget>true</IsMultiTarget>
        <IsMultiTarget Condition="'$(TargetFrameworks)' == ''">false</IsMultiTarget>

        <IsSingleTarget>true</IsSingleTarget>
        <IsSingleTarget Condition="'$(TargetFramework)' == ''">false</IsSingleTarget>

        <ShouldBeforeTargets>BeforeBuild</ShouldBeforeTargets>
        <ShouldBeforeTargets Condition="$(IsMultiTarget)">DispatchToInnerBuilds</ShouldBeforeTargets>

        <ShouldAfterTargets>AfterBuild</ShouldAfterTargets>
        <ShouldAfterTargets Condition="$(IsMultiTarget)">DispatchToInnerBuilds</ShouldAfterTargets>

        <ShouldRunTarget>false</ShouldRunTarget>
        <ShouldRunTarget Condition="(!'$(IsMultiTarget)' and '$(IsSingleTarget)') or ('$(IsMultiTarget)' and !'$(IsSingleTarget)')">true</ShouldRunTarget>
    </PropertyGroup>

    <Target Name="SetVersion" BeforeTargets="BeforeBuild">

        <Error Condition="'$(PackageVersion)' == ''" Text="Необходимо заполнить свойство PackageVersion!" />

        <PropertyGroup Condition=" '$(PackageVersion.Split(`.`)[0])' == '0' ">
            <Version>0.1.0.0</Version>
        </PropertyGroup>

        <PropertyGroup Condition=" '$(PackageVersion.Split(`.`)[0])' != '0' ">
            <Version>$(PackageVersion.Split(`.`, StringSplitOptions.None)[0]).0.0.0</Version>
        </PropertyGroup>

        <PropertyGroup>
            <VerFile>$(Version.Split(`.`)[0])$([System.DateTime]::Now.Tostring(".yyyy.MM.dd"))</VerFile>
        </PropertyGroup>

        <ItemGroup>
            <AssemblyAttributes Include="AssemblyTitle">
                <_Parameter1>$(AssemblyName) $(PackageVersion) $(TargetFramework)</_Parameter1>
            </AssemblyAttributes>
            <AssemblyAttributes Include="AssemblyVersion">
                <_Parameter1>$(Version)</_Parameter1>
            </AssemblyAttributes>
            <AssemblyAttributes Include="AssemblyFileVersion">
                <_Parameter1>$(VerFile)</_Parameter1>
            </AssemblyAttributes>
            <AssemblyAttributes Include="AssemblyInformationalVersion">
                <_Parameter1>$(PackageVersion)</_Parameter1>
            </AssemblyAttributes>
            <AssemblyAttributes Include="AssemblyDescription">
                <_Parameter1>$(Description)</_Parameter1>
            </AssemblyAttributes>
            <AssemblyAttributes Include="AssemblyCopyright">
                <_Parameter1>Copyright $([System.DateTime]::Now.ToString("yyyy"))©</_Parameter1>
            </AssemblyAttributes>
            <AssemblyAttributes Include="AssemblyProduct">
                <_Parameter1>$(AssemblyName) $(PackageVersion)</_Parameter1>
            </AssemblyAttributes>
            <AssemblyAttributes Include="AssemblyConfiguration">
                <_Parameter1>$(Configuration)</_Parameter1>
            </AssemblyAttributes>
            <!--
            <AssemblyAttributes Include="AssemblyCompany">
                <_Parameter1>$()</_Parameter1>
            </AssemblyAttributes>
            -->
        </ItemGroup>

        <ItemGroup Condition="'$(RepositoryUrl)' != ''">
            <AssemblyAttributes Include="AssemblyMetadataAttribute">
                <_Parameter1>RepositoryUrl</_Parameter1>
                <_Parameter2>$(RepositoryUrl)</_Parameter2>
            </AssemblyAttributes>
        </ItemGroup>

        <MakeDir Directories="$(BaseIntermediateOutputPath)"/>
        <WriteCodeFragment Language="C#"
                           OutputFile="$(VersionFile)"
                           AssemblyAttributes="@(AssemblyAttributes)"/>

        <Message Text="----- Сборка $(AssemblyName) $(PackageVersion) $(TargetFramework) AssemblyVersion $(Version) FileVersion $(VerFile)" Importance="High"/>

        <ItemGroup>
            <Compile Include="$(VersionFile)"/>
        </ItemGroup>

    </Target>

    <Target Name="PackNuget" Condition="$(ShouldRunTarget)" AfterTargets="$(ShouldAfterTargets)">
 
     <PropertyGroup Condition=" '$(OutputNuget)' == '' ">
         <OutputNuget>$([System.IO.Path]::GetPathRoot($(MSBuildProjectDirectory)))localNuget</OutputNuget>
     </PropertyGroup>

     <Message Text="----- Удаление nuget $(AssemblyName) из целевой папки $(OutputNuget)" Importance="High"/>
     <Exec
         WorkingDirectory="$(OutputNuget)"
         IgnoreExitCode="true"
         Command="dir * /s/b | for /f &quot;tokens=*&quot; %%a in ('findstr /i /r &quot;$(AssemblyName).[0-9]&quot;') do @del /f %%a"/>

     <Message Text="----- Запуск пакетирования $(AssemblyName)" Importance="High"/>

     <Exec Condition="'$(Configuration)' == 'Release'"
         StdErrEncoding="utf-8"
         StdOutEncoding="utf-8"
         Command="dotnet pack --no-build -c $(Configuration) --force --nologo -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg -o &quot;$(OutputNuget)&quot;" />

     <Exec Condition="'$(Configuration)' == 'Debug'"
         StdErrEncoding="utf-8"
         StdOutEncoding="utf-8"
         Command="dotnet pack --no-build -c $(Configuration) --force --nologo -p:IncludeSymbols=true -o &quot;$(OutputNuget)&quot;" />

     <Message Text="----- Удаление из кэша nuget $(PackageId)" Importance="High"/>
     <RemoveDir Directories="$(NugetPackageRoot)/$(PackageId.ToLower())" />

 </Target>
</Project>